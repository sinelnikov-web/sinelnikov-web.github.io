{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Navbar/Friend/Friend.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","assets/images/default_user.png","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","assets/images/loader.svg","components/common/Preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStausWithHooks.jsx","components/Profile/ProfileInfo/ProfileStaus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Users/Users.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Navbar/Friend/Friend.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","APIInstance","axios","withCredentials","baseURL","headers","profileAPI","userId","get","status","put","usersAPI","currentPage","pageSize","response","data","post","delete","console","warn","authAPI","email","password","rememberMe","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","text","likesCount","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","ADD_MESSAGE","dialogs","name","messages","message","dialogsReducer","newMessage","newMessageText","friends","avatar","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","map","user","followed","totalCount","filter","SET_USER_DATA","login","isAuth","setAuthUserDataSuccess","setAuthUserData","dispatch","resultCode","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","messagesPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","News","Music","Settings","DialogItem","props","className","s","dialog","active","to","Message","FormControl","input","meta","child","hasError","touched","error","formControl","children","Textarea","restProps","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","AddMessageReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","validate","Dialogs","dialogsElements","messagesElements","dialogsItems","formData","addMessage","mapStateToProps","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","addMessageActionCreator","Friend","friendsBlock","friendAvatar","src","userData","alt","Navbar","friendsList","friend","nav","item","activeClassName","friendsListWrapper","friendsHeader","NavbarContainer","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","Users","photos","small","userPhoto","disabled","some","unfollow","follow","Preloader","preloader","UsersContainer","setCurrentPage","getUsers","items","followSuccess","unfollowSuccess","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","onChange","currentTarget","onBlur","updateStatus","ProfileInfo","content","descriptionBlock","album","large","Post","maxLength10","PostsReduxForm","MyPosts","postsElements","postsBlock","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","authorizedUserId","getUserProfile","getStatus","ProfileApi","withRouter","Header","header","logo","loginBlock","logout","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","App","initializeApp","path","render","DialogsContainer","Login","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bec2af34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1Ie6w\",\"item\":\"Navbar_item__1CFDi\",\"active\":\"Navbar_active__3HjG6\",\"friendsListWrapper\":\"Navbar_friendsListWrapper__3iQY4\",\"friendsList\":\"Navbar_friendsList__CSsC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"album\":\"Profile_album__xGVoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__He3Ov\",\"item\":\"Post_item__3djRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3RYuC\",\"dialogsItems\":\"Dialogs_dialogsItems__3IUAr\",\"active\":\"Dialogs_active__2PPCz\",\"dialog\":\"Dialogs_dialog__3WC3I\",\"messages\":\"Dialogs_messages__FuCIo\",\"message\":\"Dialogs_message__1nwrv\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as axios from \"axios\";\r\n\r\nconst APIInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"07442674-e8bd-4bdd-b7b5-95e92db8d98b\"\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return APIInstance\r\n            .get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return APIInstance\r\n            .get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return APIInstance\r\n            .put(`profile/status`, {\r\n                status: status\r\n            })\r\n    },\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return APIInstance\r\n            .get(`users?page=${currentPage}&${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return APIInstance\r\n            .post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return APIInstance\r\n            .delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('old method getProfile')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getMe() {\r\n        return APIInstance\r\n            .get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return APIInstance\r\n            .post('auth/login', {\r\n                email,\r\n                password,\r\n                rememberMe\r\n            })\r\n            .then(response => response.data)\r\n    },\r\n    logout(email, password, rememberMe) {\r\n        return APIInstance\r\n            .delete('auth/login')\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n","import {profileAPI as ProfileApi, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_STATUS = 'SET-STATUS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, text: 'Sveta', likesCount: 1},\r\n        {id: 2, text: 'Sasha', likesCount: 3},\r\n        {id: 3, text: 'Dima', likesCount: 5},\r\n        {id: 4, text: 'Kolya', likesCount: 6},\r\n        {id: 5, text: 'Artem', likesCount: 7},\r\n        {id: 6, text: 'Vika', likesCount: 8}\r\n    ],\r\n    profile: null\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 7,\r\n                text: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setUserProfile(response.data))\r\n            })\r\n    }\r\n}\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        ProfileApi.getStatus(userId)\r\n            .then(response => {\r\n                dispatch(setStatus(response.data))\r\n            })\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        ProfileApi.updateStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setStatus(status))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Sveta'}, {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Dima'}, {id: 4, name: 'Kolya'},\r\n        {id: 5, name: 'Artem'}, {id: 6, name: 'Vika'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hello'}, {id: 2, message: 'Hi'},\r\n        {id: 3, message: 'How old are you?'}, {id: 4, message: 'I\\'m 26 yo'},\r\n        {id: 5, message: 'Are you here?'}, {id: 6, message: 'Yes'}\r\n    ],\r\n}\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: 7,\r\n                message: action.newMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageText) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageText\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer","\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, avatar: 'http://archilab.online/images/1/123.jpg', name: 'Dima'},\r\n        {id: 2, avatar: 'https://demiart.ru/forum/journal_uploads13/j2406363_1591724080_0.jpg', name: 'Sveta'},\r\n        {id: 3, avatar: 'https://www.meme-arsenal.com/memes/0b37d82bcfd11cb3196fa5329f3bff0f.jpg', name: 'Artem'},\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\nexport const setTotalUsersCount = (totalCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalCount: totalCount\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: currentPage\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUsersCount(data.totalCount))\r\n                dispatch(toggleIsFetching(false))\r\n            })\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                    dispatch(toggleFollowingProgress(false, userId))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                    dispatch(toggleFollowingProgress(false, userId))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n    // isFetching: false\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserDataSuccess = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: {\r\n            userId: userId,\r\n            email: email,\r\n            login: login,\r\n            isAuth\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = () => {\r\n    return (dispatch) => {\r\n        return authAPI.getMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, login, email} = data.data\r\n                    dispatch(setAuthUserDataSuccess(id, email, login, true))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        authAPI.login(email, password, rememberMe)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setAuthUserData())\r\n                } else {\r\n                    let message = data.messages.length > 0 ? data.messages[0] : \"Some error\"\r\n                    dispatch(stopSubmit('login', {\r\n                        _error: message\r\n                    }))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        authAPI.logout()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setAuthUserDataSuccess(null, null, null, false))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default authReducer","import {setAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'SET-INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        dispatch(setAuthUserData())\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\n\r\nexport default store","import React from 'react'\r\n\r\nconst News = () => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react'\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={`/dialogs/${props.id}`}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return(\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}","\r\nexport const required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n        if (value && value.length > maxLength) {\r\n            return `Max length is ${maxLength} symbols`\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={\"Enter new message text\"}\r\n                    name={\"newMessageText\"}\r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: 'dialogs',\r\n})(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.messagesPage.dialogs.map(dialog => (\r\n        <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>\r\n    ))\r\n\r\n    let messagesElements = props.messagesPage.messages.map(message => (\r\n        <Message key={message.id} message={message.message}/>\r\n    ))\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    let onSubmit = (formData) => {\r\n        props.addMessage(formData.newMessageText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to={'/login'}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageActionCreator(newMessageText))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)","import React from \"react\";\r\nimport s from './Friend.module.css'\r\n\r\nconst Friend = (props) => {\r\n    return(\r\n        <div className={s.friendsBlock}>\r\n            <div>\r\n                <img className={s.friendAvatar} src={props.userData.avatar} alt=\"\"/>\r\n            </div>\r\n            <p>\r\n                {props.userData.name}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Navbar = (props) => {\r\n    let friendsList = props.state.friends.map(friend => <Friend key={friend.id} userData={friend}/>)\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={'/profile'} activeClassName={s.active}>\r\n                    Profile\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/dialogs'} activeClassName={s.active}>\r\n                    Messages\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/users'} activeClassName={s.active}>\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/news'} activeClassName={s.active}>\r\n                    News\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/music'} activeClassName={s.active}>\r\n                    Music\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/settings'} activeClassName={s.active}>\r\n                    Settings\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.friendsListWrapper}>\r\n                <h3 className={s.friendsHeader}>Friends</h3>\r\n                <div className={s.friendsList}>\r\n                    {friendsList}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import Navbar from \"./Navbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.sidebar\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n\r\n\r\nexport default NavbarContainer","export default __webpack_public_path__ + \"static/media/default_user.ab7efdc7.png\";","import styles from \"../../Users/Users.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport cn from 'classnames'\r\n\r\nconst Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = []\r\n\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={cn({\r\n                        [styles.selectedPage]: currentPage === p\r\n                    }, styles.pageNumber)}\r\n                                 key={p}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p);\r\n                                 }}>{p}</span>\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</button>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/default_user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={props.currentPage}\r\n                       onPageChanged={props.onPageChanged}\r\n                       totalUsersCount={props.totalUsersCount}\r\n                       pageSize={props.pageSize}\r\n            />\r\n            {\r\n                props.users.map(user => <div key={user.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto} className={s.userPhoto}\r\n                                 alt=\"\"/>\r\n                                 </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                user.followed\r\n                                    ? <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => props.unfollow(user.id)}>Unfollow</button>\r\n                                    : <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => props.follow(user.id)}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"user.location.country\"}</div>\r\n                            <div>{\"user.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","export default __webpack_public_path__ + \"static/media/loader.9637ee70.svg\";","import preloader from \"../../../assets/images/loader.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nlet Preloader = () => {\r\n    return(\r\n        <div>\r\n            <img alt=\"\" src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    getUsers, setCurrentPage, unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: followAC,\r\n//         unfollow: unfollowAC,\r\n//         setUsers: setUsersAC,\r\n//         setCurrentPage: setCurrentPageAC,\r\n//         setTotalUsersCount: setTotalUsersCountAC,\r\n//         toggleIsFetching: toggleIsFetchingAC\r\n//     }\r\n// }\r\n\r\n// let withRedirect = withAuthRedirect(UsersContainer)\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{\r\n        setCurrentPage, getUsers, follow, unfollow\r\n    }),\r\n    withAuthRedirect\r\n)(UsersContainer)","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}>{props.status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input  autoFocus={true} onChange={onStatusChange} onBlur={deactivateMode} value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component{\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.status)\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStaus\";\r\nimport userPhoto from \"../../../assets/images/default_user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStausWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            {/*<div>*/}\r\n            {/*    <img className={s.album}*/}\r\n            {/*         src=\"https://media-exp1.licdn.com/dms/image/C4D1BAQGDmALg_8s-Yg/company-background_10000/0/1519799119530?e=2159024400&v=beta&t=4WV9YKR9L3PAEnppWmPPMk5xVnETtWvhZN8NexEzPwM\"*/}\r\n            {/*         alt=\"\"/>*/}\r\n            {/*</div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.album}\r\n                     src={props.profile.photos.large || userPhoto}\r\n                     alt=\"\"/>\r\n            </div>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://avatars.mds.yandex.net/get-ott/374297/2a000001616b87458162c9216ccd5144e94d/678x380\"\r\n                 alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst PostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                    <Field\r\n                        placeholder={\"Enter new post text\"}\r\n                        name={\"newPostText\"}\r\n                        component={Textarea}\r\n                        validate={[required, maxLength10]}\r\n                    />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostsReduxForm = reduxForm({\r\n    form: 'posts',\r\n})(PostsForm)\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(post => <Post key={post.id} message={post.text} likesCount={post.likesCount}/>)\r\n\r\n    let onSubmit = (formData) => {\r\n        props.addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <PostsReduxForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img className={s.logo} src=\"https://cdn.worldvectorlogo.com/logos/mediafire-1-3.svg\" alt=\"\"/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ?\r\n                    <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    :\r\n                    <NavLink to={'/login'}>\r\n                        Login\r\n                    </NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout\r\n})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return(\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field\r\n                        placeholder={\"Email\"}\r\n                        name={\"email\"}\r\n                        validate={[required]}\r\n                        component={Input}/>\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        placeholder={\"Password\"}\r\n                        type={'password'}\r\n                        name={\"password\"}\r\n                        validate={[required]}\r\n                        component={Input}/>\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        type=\"checkbox\"\r\n                        name={\"rememberMe\"}\r\n                        component={Input}/> remember me\r\n                </div>\r\n                {\r\n                    props.error && <div className={s.formSummaryError}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(\r\n            formData.email,\r\n            formData.password,\r\n            formData.rememberMe\r\n        )\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import './App.css';\nimport {BrowserRouter, Route} from \"react-router-dom\"\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <BrowserRouter>\n                <div className={'app-wrapper'}>\n                    <HeaderContainer/>\n                    <NavbarContainer/>\n                    <div className={'app-wrapper-content'}>\n                        <Route\n                            path={'/dialogs'}\n                            render={() => <DialogsContainer/>}\n                        />\n                        <Route\n                            path={'/profile/:userId?'}\n                            render={() => <ProfileContainer/>}\n                        />\n                        <Route\n                            path={'/users'}\n                            render={() => <UsersContainer/>}\n                        />\n                        <Route path={'/news'} component={News}/>\n                        <Route path={'/music'} component={Music}/>\n                        <Route path={'/settings'} component={Settings}/>\n                        <Route path={'/login'} component={Login}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initializeApp})(App)\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n        <Provider store={store}>\n            <App/>\n        </Provider>,\n    document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Users_paginator__yjAOx\",\"pageNumber\":\"Users_pageNumber__3wN7K\",\"selectedPage\":\"Users_selectedPage__1RWrX\",\"userPhoto\":\"Users_userPhoto__KTviU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2Dg07\",\"error\":\"FormsControls_error__1ApSp\",\"formSummaryError\":\"FormsControls_formSummaryError__T1IGs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1P51r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__33sCE\",\"logo\":\"Header_logo__j0zlY\",\"loginBlock\":\"Header_loginBlock__3oN2m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsBlock\":\"Friend_friendsBlock__3HmZK\",\"friendsHeader\":\"Friend_friendsHeader__37D2O\",\"friendAvatar\":\"Friend_friendAvatar__3cgeM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2CAu-\",\"posts\":\"MyPosts_posts__31Mc2\"};"],"sourceRoot":""}